------------MEMBER TABLE-----------
CREATE TABLE MEMBER (
  M_ID NVARCHAR2(15),
  M_PW NVARCHAR2(15) NOT NULL,
  M_NAME NVARCHAR2(10) NOT NULL,
  M_GENDER NVARCHAR2(3) NOT NULL,
  M_BIRTH DATE NOT NULL,
  M_DOMICILE NVARCHAR2(50) NOT NULL,
  M_EMAIL NVARCHAR2(20) NOT NULL,
  M_BHEIGHT NUMBER NOT NULL,
  M_BWEIGHT NUMBER NOT NULL,
  M_WISH NVARCHAR2(100) NOT NULL
);
-------------------------------------
select * from member;
-------MEMBER 주키 & 외래키 설정---------
ALTER TABLE MEMBER
ADD CONSTRAINT PK_M_ID PRIMARY KEY(M_ID);


-----------PROGRAM TABLE-----------
CREATE TABLE PROGRAM (
  P_CODE NUMBER,
  P_NAME NVARCHAR2(20) NOT NULL,
  P_T_ID NVARCHAR2(15) NOT NULL,
  P_T_NAME NVARCHAR2(10) NOT NULL,
  P_INFO NVARCHAR2(500) NOT NULL,
  P_PRICE NUMBER NOT NULL
);

------PROGRAM SEQUENCE--------------
CREATE SEQUENCE PROGRAM_SEQ;

-------PROGRAM 주키 & 외래키 설정---------
ALTER TABLE PROGRAM
ADD CONSTRAINT PK_P_CODE PRIMARY KEY(P_CODE);

ALTER TABLE PROGRAM
ADD CONSTRAINT FK_P_T_ID FOREIGN KEY(P_T_ID) REFERENCES TRAINER(T_ID) ON DELETE CASCADE;

-----------T_FOOD TABLE-------------
CREATE TABLE T_FOOD (
  TF_CODE NUMBER,
  TF_T_ID NVARCHAR2(15) NOT NULL,
  TF_M_ID NVARCHAR2(15) NOT NULL,
  TF_DATE DATE default sysdate,
  TF_TIME NVARCHAR2(5) NOT NULL,
  TF_F_KIND NVARCHAR2(10) NOT NULL,
  TF_F_NAME NVARCHAR2(20) NOT NULL,
  TF_F_AMOUNT NUMBER NOT NULL,
  TF_F_CAL NUMBER NOT NULL
);
CREATE SEQUENCE TF_SEQ;
-------T_FOOD 주키 & 외래키 설정---------
ALTER TABLE T_FOOD
ADD CONSTRAINT PK_TF_CODE PRIMARY KEY(TF_CODE);

ALTER TABLE T_FOOD
ADD CONSTRAINT FK_TF_T_ID FOREIGN KEY(TF_T_ID)REFERENCES TRAINER(T_ID) ON DELETE CASCADE;

ALTER TABLE T_FOOD
ADD CONSTRAINT FK_TF_M_ID FOREIGN KEY(TF_M_ID)REFERENCES MEMBER(M_ID) ON DELETE CASCADE;

ALTER TABLE T_FOOD
ADD CONSTRAINT FK_TF_F_NAME FOREIGN KEY(TF_F_NAME)REFERENCES FOOD(F_NAME)ON DELETE CASCADE;

-----------T_EXERCISE TABLE-------------
CREATE TABLE T_EXERCISE (
  TE_CODE NUMBER,
  TE_T_ID NVARCHAR2(15) NOT NULL,
  TE_M_ID NVARCHAR2(15) NOT NULL,
  TE_DATE DATE DEFAULT sysdate,
  TE_E_NAME NVARCHAR2(20) NOT NULL,
  TE_E_TIME NUMBER NOT NULL,
  TE_E_CAL NVARCHAR2(50) NOT NULL
);
CREATE SEQUENCE TE_SEQ;
-------T_EXERCISE 주키 & 외래키 설정---------
ALTER TABLE T_EXERCISE
ADD CONSTRAINT PK_TE_CODE PRIMARY KEY(TE_CODE);

ALTER TABLE T_EXERCISE
ADD CONSTRAINT FK_TE_T_ID FOREIGN KEY(TE_T_ID)REFERENCES TRAINER(T_ID) ON DELETE CASCADE;

ALTER TABLE T_EXERCISE
ADD CONSTRAINT FK_TE_M_ID FOREIGN KEY(TE_M_ID)REFERENCES MEMBER(M_ID) ON DELETE CASCADE;

ALTER TABLE T_EXERCISE
ADD CONSTRAINT FK_TE_F_NAME FOREIGN KEY(TE_E_NAME)REFERENCES EXERCISE(E_NAME) ON DELETE CASCADE;

-----------M_FOOD TABLE-------------
CREATE TABLE M_FOOD (
  MF_CODE NUMBER,
  MF_T_ID NVARCHAR2(15) NOT NULL,
  MF_M_ID NVARCHAR2(15) NOT NULL,
  MF_DATE DATE DEFAULT sysdate,
  MF_TIME NVARCHAR2(5) NOT NULL,
  MF_F_NAME NVARCHAR2(20) NOT NULL,
  MF_F_AMOUNT NUMBER NOT NULL,
  MF_F_CAL NUMBER NOT NULL
);
CREATE SEQUENCE MF_SEQ;
-------M_FOOD 주키 & 외래키 설정---------
ALTER TABLE M_FOOD
ADD CONSTRAINT PK_MF_CODE PRIMARY KEY(MF_CODE);

ALTER TABLE M_FOOD
ADD CONSTRAINT FK_MF_T_ID FOREIGN KEY(MF_T_ID)REFERENCES TRAINER(T_ID) ON DELETE CASCADE;

ALTER TABLE M_FOOD
ADD CONSTRAINT FK_MF_M_ID FOREIGN KEY(MF_M_ID)REFERENCES MEMBER(M_ID) ON DELETE CASCADE;

ALTER TABLE M_FOOD
ADD CONSTRAINT FK_MF_F_NAME FOREIGN KEY(MF_F_NAME)REFERENCES FOOD(F_NAME) ON DELETE CASCADE;

-----------M_EXERCISE TABLE-------------
CREATE TABLE M_EXERCISE (
  ME_CODE NUMBER,
  ME_T_ID NVARCHAR2(15) NOT NULL,
  ME_M_ID NVARCHAR2(15) NOT NULL,
  ME_DATE DATE DEFAULT sysdate,
  ME_E_NAME NVARCHAR2(20) NOT NULL,
  ME_E_TIME NUMBER NOT NULL,
  ME_E_CAL NVARCHAR2(50) NOT NULL
);

CREATE SEQUENCE ME_SEQ;
commit;
-------M_EXERCISE 주키 & 외래키 설정---------
ALTER TABLE M_EXERCISE
ADD CONSTRAINT PK_ME_CODE PRIMARY KEY(ME_CODE);

ALTER TABLE M_EXERCISE
ADD CONSTRAINT FK_ME_T_ID FOREIGN KEY(ME_T_ID)REFERENCES TRAINER(T_ID) ON DELETE CASCADE;

ALTER TABLE M_EXERCISE
ADD CONSTRAINT FK_ME_M_ID FOREIGN KEY(ME_M_ID)REFERENCES MEMBER(M_ID) ON DELETE CASCADE;

ALTER TABLE M_EXERCISE
ADD CONSTRAINT FK_ME_F_NAME FOREIGN KEY(ME_E_NAME)REFERENCES EXERCISE(E_NAME) ON DELETE CASCADE;

---------REVIEW TABLE-------------
CREATE TABLE REVIEW (
  R_M_ID NVARCHAR2(15) NOT NULL,
  R_M_NAME NVARCHAR2(15) NOT NULL,
  R_TITLE NVARCHAR2(50) NOT NULL,
  R_SUBSTANCE NVARCHAR2(500) NOT NULL,
  R_FILENAME NVARCHAR2(100) NOT NULL,
  R_DATE DATE DEFAULT sysdate, --작성날짜
  R_GROUP NUMBER NOT NULL, -- 글번호 그룹
  R_CODE NUMBER NOT NULL, --후기 글 번호
  R_COUNT NUMBER NOT NULL  --조회수
);
commit;
DROP TABLE REVIEW;
select * from review;
-------REVIEW 주키 & 외래키 설정---------
ALTER TABLE REVIEW
ADD CONSTRAINT PK_R_CODE PRIMARY KEY(R_CODE);

ALTER TABLE REVIEW 
ADD CONSTRAINT FK_R_M_ID FOREIGN KEY(R_M_ID)REFERENCES MEMBER(M_ID) ON DELETE CASCADE;

ALTER TABLE REVIEW MODIFY R_COUNT default 0;

-------TRAINER TABLE---------
CREATE TABLE TRAINER (
  T_ID NVARCHAR2(15),
  T_PW NVARCHAR2(15) NOT NULL,
  T_NAME NVARCHAR2(10) NOT NULL,
  T_GENDER NVARCHAR2(3) NOT NULL,
  T_BIRTH DATE NOT NULL,
  T_DOMICILE NVARCHAR2(50) NOT NULL,
  T_EMAIL NVARCHAR2(20) NOT NULL,
  T_PROFILEPHOTO NVARCHAR2(200) NOT NULL
);


-------TRAINER 주키 & 외래키 설정---------
ALTER TABLE TRAINER
ADD CONSTRAINT PK_T_ID PRIMARY KEY(T_ID);

-------REGISTER TABLE---------
CREATE TABLE REGISTER(
    RG_M_ID NVARCHAR2(15) NOT NULL,
    RG_T_ID NVARCHAR2(15) NOT NULL,
    RG_M_NAME NVARCHAR2(10) NOT NULL,
    RG_T_NAME NVARCHAR2(10) NOT NULL,
    RG_P_CODE NUMBER NOT NULL
);
commit;

-------REGISTER 주키 & 외래키 설정---------
ALTER TABLE REGISTER
ADD CONSTRAINT PK_RG_M_ID_P_CODE PRIMARY KEY(RG_M_ID, RG_P_CODE);

ALTER TABLE REGISTER
ADD CONSTRAINT FK_RG_M_ID FOREIGN KEY(RG_M_ID)REFERENCES MEMBER(M_ID) ON DELETE CASCADE;

ALTER TABLE REGISTER
ADD CONSTRAINT FK_RG_T_ID FOREIGN KEY(RG_T_ID)REFERENCES TRAINER(T_ID) ON DELETE CASCADE;

ALTER TABLE REGISTER
ADD CONSTRAINT FK_RG_P_CODE FOREIGN KEY(RG_P_CODE)REFERENCES PROGRAM(P_CODE) ON DELETE CASCADE;

-------ADMIN TABLE---------
CREATE TABLE ADMIN(
    A_ID NVARCHAR2(10),
    A_PW NVARCHAR2(10) NOT NULL
);
select * from admin;
INSERT INTO ADMIN VALUES('admin','1111');
commit;
-------ADMIN 주키 & 외래키 설정---------
ALTER TABLE ADMIN
ADD CONSTRAINT PK_A_ID PRIMARY KEY(A_ID);

-------REPLY TABLE---------
CREATE TABLE REPLY(
 RP_NUM NUMBER,
 RP_ID NVARCHAR2(15) NOT NULL,
 RP_DATE DATE DEFAULT sysdate,
 RP_COMMENT NVARCHAR2(50) NOT NULL,
 RP_D_CODE NUMBER NOT NULL
);
select * from reply;
select max(rp_num) from reply;
DROP TABLE REPLY;
-------REPLY 주키 & 외래키 설정---------
ALTER TABLE REPLY
ADD CONSTRAINT PK_RP_NUM PRIMARY KEY(RP_NUM);

ALTER TABLE REPLY
ADD CONSTRAINT FK_RP_ID FOREIGN KEY(RP_ID)REFERENCES MEMBER(M_ID) ON DELETE CASCADE;

ALTER TABLE REPLY
ADD CONSTRAINT FK_RP_T_ID FOREIGN KEY(RP_T_ID)REFERENCES TRAINER(T_ID) ON DELETE CASCADE;

--일지 번호에 대한 제약조건 추후 테이블 생성해서 할지 연동이 되는지 확인
--ALTER TABLE REPLE
--ADD CONSTRAINT FK_RP_D_CODE FOREIGN KEY(RP_D_CODE)REFERENCES T_FOOD(TF_CODE);
--ALTER TABLE REPLE
--ADD CONSTRAINT FK_RP_D_CODE FOREIGN KEY(RP_D_CODE)REFERENCES M_FOOD(MF_CODE);
--ALTER TABLE REPLE
--ADD CONSTRAINT FK_RP_D_CODE FOREIGN KEY(RP_D_CODE)REFERENCES T_EXERCISE(TE_CODE);
--ALTER TABLE REPLE
--ADD CONSTRAINT FK_RP_D_CODE FOREIGN KEY(RP_D_CODE)REFERENCES M_EXERCISE(TE_CODE);

---------------------신체정보 테이블---------------------
CREATE TABLE B_BODY(
  B_CODE NUMBER,
  B_M_ID NVARCHAR2(10) NOT NULL,
  B_T_ID NVARCHAR2(15) NOT NULL,
  B_DATE DATE DEFAULT SYSDATE,
  B_WEIGHT NUMBER NOT NULL,
  B_HEIGHT NUMBER NOT NULL
);
INSERT INTO ADMIN VALUES('admin', '1111');
---------------신체정보 테이블 제약조건---------------------------
ALTER TABLE B_BODY
ADD CONSTRAINT PK_B_CODE PRIMARY KEY(B_CODE);

ALTER TABLE B_BODY
ADD CONSTRAINT FK_B_M_ID FOREIGN KEY(B_M_ID)REFERENCES MEMBER(M_ID) ON DELETE CASCADE;

ALTER TABLE B_BODY
ADD CONSTRAINT FK_B_T_ID FOREIGN KEY(B_T_ID)REFERENCES TRAINER(T_ID) ON DELETE CASCADE;

CREATE SEQUENCE B_BODY_SEQ;

------------------음식 테이블--------------------
CREATE TABLE FOOD(
  F_KIND NVARCHAR2(20) NOT NULL,
  F_NAME NVARCHAR2(20) NOT NULL,
  F_CAL NUMBER NOT NULL,
  F_GRAM NUMBER NOT NULL
);

------------------음식 테이블 제약조건--------------------
ALTER TABLE FOOD
ADD CONSTRAINT PK_F_NAME PRIMARY KEY(F_NAME);

------------------운동 테이블--------------------
CREATE TABLE EXERCISE(
  E_NAME NVARCHAR2(20) NOT NULL,
  E_CAL NUMBER NOT NULL,
  E_MINUTE NUMBER NOT NULL
);

------------------운동 테이블 제약조건--------------------
ALTER TABLE EXERCISE
ADD CONSTRAINT PK_E_NAME PRIMARY KEY(E_NAME);

--------PK,FK,UNIQUE 확인---------
SELECT * FROM USER_CONSTRAINTS;
INSERT INTO review values('');
UPDATE review set r_count = r_count+1 WHERE r_code = 1;
SELECT * FROM (SELECT rownum rnum, r_code, r_m_id, r_m_name, r_title, r_substance, r_filename, r_group, r_date, r_count FROM (SELECT * FROM review order by r_code DESC)) WHERE rnum>=1 and rnum<=5;
SELECT rp_m_id, rp_comment, rp_date FROM reply WHERE rp_d_code=11;
-------------테이블 확인-------------
SELECT * FROM MEMBER;
SELECT * FROM PROGRAM;
SELECT * FROM T_FOOD;
SELECT * FROM M_FOOD;
SELECT * FROM T_EXERCISE;
SELECT * FROM M_EXERCISE;
SELECT * FROM REVIEW;
SELECT * FROM TRAINER;
SELECT * FROM REPLY;
SELECT * FROM REGISTER;
COMMIT;
SELECT * FROM ADMIN;
SELECT * FROM B_BODY;
SELECT * FROM FOOD;
SELECT * FROM EXERCISE;
-------------테이블 삭제------------------
DROP TABLE MEMBER;
DROP TABLE PROGRAM;
DROP TABLE T_FOOD;
DROP TABLE M_FOOD;
DROP TABLE T_EXERCISE;
DROP TABLE M_EXERCISE;
DROP TABLE REVIEW;
DROP TABLE TRAINER;
DROP TABLE REPLY;
DROP TABLE REGISTER;
DROP TABLE ADMIN;
DROP TABLE B_BODY;
DROP TABLE FOOD;
DROP TABLE EXERCISE;

COMMIT;

-------------FOOD DATA-----------------------
-------------육류(종류,이름,칼로리,분량(g)----------------------------
INSERT INTO FOOD VALUES(
'육류','삼겹살',670,200
);
INSERT INTO FOOD VALUES(
'육류','불고기',201,100
);
INSERT INTO FOOD VALUES(
'육류','등심구이',455,200
);
INSERT INTO FOOD VALUES(
'육류','돼지갈비',391,200
);
INSERT INTO FOOD VALUES(
'육류','베이컨',237,40
);
INSERT INTO FOOD VALUES(
'육류','갈비구이',564,200
);
INSERT INTO FOOD VALUES(
'육류','갈매기구이',252,200
);
INSERT INTO FOOD VALUES(
'육류','곱창구이',307,200
);
INSERT INTO FOOD VALUES(
'육류','오리구이',268,200
);
INSERT INTO FOOD VALUES(
'육류','족발',253,200
);
INSERT INTO FOOD VALUES(
'육류','보쌈',369,200
);
INSERT INTO FOOD VALUES(
'육류','닭가슴살',109,100
);
INSERT INTO FOOD VALUES(
'육류','후라이드치킨',225,100
);
INSERT INTO FOOD VALUES(
'육류','양념치킨',251,100
);
INSERT INTO FOOD VALUES(
'육류','간장치킨',309,100
);
INSERT INTO FOOD VALUES(
'육류','파닭',317,100
);
-------------과일(종류,이름,칼로리,분량(g)----------------------------
INSERT INTO FOOD VALUES(
'과일','수박',15.5,50
);
INSERT INTO FOOD VALUES(
'과일','딸기',5.2,20
);
INSERT INTO FOOD VALUES(
'과일','참외',62,200
);
INSERT INTO FOOD VALUES(
'과일','사과',98,200
);
INSERT INTO FOOD VALUES(
'과일','배',156,400
);
INSERT INTO FOOD VALUES(
'과일','키위',27,50
);
INSERT INTO FOOD VALUES(
'과일','오렌지',80,200
);
INSERT INTO FOOD VALUES(
'과일','포도',180,300
);
INSERT INTO FOOD VALUES(
'과일','귤',19,50
);
INSERT INTO FOOD VALUES(
'과일','바나나',93,100
);
INSERT INTO FOOD VALUES(
'과일','블루베리',50,100
);
-------------채소(종류,이름,칼로리,분량(g)----------------------------
INSERT INTO FOOD VALUES(
'채소','방울토마토',16,100
);
INSERT INTO FOOD VALUES(
'채소','토마토',14,100
);
INSERT INTO FOOD VALUES(
'채소','오이',11,100
);
INSERT INTO FOOD VALUES(
'채소','피망',17,100
);
INSERT INTO FOOD VALUES(
'채소','단호박',66,100
);
INSERT INTO FOOD VALUES(
'채소','옥수수',106,100
);
INSERT INTO FOOD VALUES(
'채소','콩',400,100
);
INSERT INTO FOOD VALUES(
'채소','양배추',19,100
);
INSERT INTO FOOD VALUES(
'채소','양상추',11,100
);
INSERT INTO FOOD VALUES(
'채소','샐러리',22,100
);
INSERT INTO FOOD VALUES(
'채소','양파',34,100
);
INSERT INTO FOOD VALUES(
'채소','아스파라거스',12,100
);
INSERT INTO FOOD VALUES(
'채소','브로콜리',28,100
);
INSERT INTO FOOD VALUES(
'채소','당근',34,100
);
INSERT INTO FOOD VALUES(
'채소','감자',66,100
);
INSERT INTO FOOD VALUES(
'채소','고구마',128,100
);
-------------EXERCISE DATA-----------------------
-------운동이름(이름,칼로리,분당)------
INSERT INTO EXERCISE VALUES(
'스쿼트',7.36,1
);
INSERT INTO EXERCISE VALUES(
'힙업',8.4,1
);
INSERT INTO EXERCISE VALUES(
'자전거타기',11,1
);
INSERT INTO EXERCISE VALUES(
'윗몸일으키기',8.6,1
);
INSERT INTO EXERCISE VALUES(
'스트레칭체조',2.5,1
);
INSERT INTO EXERCISE VALUES(
'에어로빅',5.2,1
);
INSERT INTO EXERCISE VALUES(
'팔굽혀펴기',4.2,1
);
INSERT INTO EXERCISE VALUES(
'요가',2.5,1
);
INSERT INTO EXERCISE VALUES(
'계단오르기',5.8,1
);
INSERT INTO EXERCISE VALUES(
'배드민턴',7,1
);
INSERT INTO EXERCISE VALUES(
'줄넘기',8.9,1
);
INSERT INTO EXERCISE VALUES(
'조깅',9.4,1
);
INSERT INTO EXERCISE VALUES(
'수영',17.4,1
);
INSERT INTO EXERCISE VALUES(
'걷기',3,1
);
INSERT INTO EXERCISE VALUES(
'등산',6.53,1
);
INSERT INTO EXERCISE VALUES(
'사이클',3.7,1
);